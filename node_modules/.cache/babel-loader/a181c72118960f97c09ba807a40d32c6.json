{"ast":null,"code":"var _jsxFileName = \"/Users/ivysun/Library/Mobile Documents/com~apple~CloudDocs/Hunter/Spring 2025/CS 39548 Practical Web Development /Projects/final-project-client/src/components/views/EditStudentView.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport EditStudentView from '../views/EditStudentView';\nimport { fetchStudentThunk, editStudentThunk, fetchAllCampusesThunk } from '../../store/thunks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass EditStudentContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      const {\n        firstname,\n        lastname,\n        email,\n        imageUrl,\n        gpa,\n        campusId\n      } = this.state;\n      const payload = {\n        id: this.props.match.params.id,\n        firstname,\n        lastname,\n        email,\n        imageUrl: imageUrl.trim() || '/student.png',\n        gpa: parseFloat(gpa) || 0,\n        campusId: campusId || null\n      };\n      try {\n        await this.props.editStudent(payload.id, payload);\n        this.setState({\n          redirect: true\n        });\n      } catch (err) {\n        console.error('Error updating student:', err);\n      }\n    };\n    this.state = {\n      firstname: '',\n      lastname: '',\n      email: '',\n      imageUrl: '',\n      gpa: '',\n      campusId: '',\n      redirect: false\n    };\n  }\n  async componentDidMount() {\n    var _student$campus, _student$campus$id;\n    await this.props.fetchAllCampuses();\n    const student = await this.props.fetchStudent(this.props.match.params.id);\n    this.setState({\n      firstname: student.firstname || '',\n      lastname: student.lastname || '',\n      email: student.email || '',\n      imageUrl: student.imageUrl || '',\n      gpa: student.gpa || '',\n      campusId: ((_student$campus = student.campus) === null || _student$campus === void 0 ? void 0 : (_student$campus$id = _student$campus.id) === null || _student$campus$id === void 0 ? void 0 : _student$campus$id.toString()) || ''\n    });\n  }\n  render() {\n    if (this.state.redirect) {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: `/student/${this.props.match.params.id}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 14\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditStudentView, {\n        ...this.state,\n        campuses: this.props.campuses,\n        handleChange: this.handleChange,\n        handleSubmit: this.handleSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this);\n  }\n}\nconst mapState = state => ({\n  campuses: state.allCampuses\n});\nconst mapDispatch = dispatch => ({\n  fetchAllCampuses: () => dispatch(fetchAllCampusesThunk()),\n  fetchStudent: id => dispatch(fetchStudentThunk(id)),\n  editStudent: (id, student) => dispatch(editStudentThunk(id, student))\n});\nexport default connect(mapState, mapDispatch)(EditStudentContainer);","map":{"version":3,"names":["React","Component","connect","Redirect","EditStudentView","fetchStudentThunk","editStudentThunk","fetchAllCampusesThunk","jsxDEV","_jsxDEV","EditStudentContainer","constructor","props","handleChange","e","setState","target","name","value","handleSubmit","preventDefault","firstname","lastname","email","imageUrl","gpa","campusId","state","payload","id","match","params","trim","parseFloat","editStudent","redirect","err","console","error","componentDidMount","_student$campus","_student$campus$id","fetchAllCampuses","student","fetchStudent","campus","toString","render","to","fileName","_jsxFileName","lineNumber","columnNumber","children","Header","campuses","mapState","allCampuses","mapDispatch","dispatch"],"sources":["/Users/ivysun/Library/Mobile Documents/com~apple~CloudDocs/Hunter/Spring 2025/CS 39548 Practical Web Development /Projects/final-project-client/src/components/views/EditStudentView.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport EditStudentView from '../views/EditStudentView';\nimport { fetchStudentThunk, editStudentThunk, fetchAllCampusesThunk } from '../../store/thunks';\n\nclass EditStudentContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      firstname: '',\n      lastname: '',\n      email: '',\n      imageUrl: '',\n      gpa: '',\n      campusId: '',\n      redirect: false\n    };\n  }\n\n  async componentDidMount() {\n    await this.props.fetchAllCampuses();\n\n    const student = await this.props.fetchStudent(this.props.match.params.id);\n    this.setState({\n      firstname: student.firstname || '',\n      lastname:  student.lastname  || '',\n      email:     student.email     || '',\n      imageUrl:  student.imageUrl  || '',\n      gpa:       student.gpa       || '',\n      campusId:  student.campus?.id?.toString() || ''\n    });\n  }\n\n  handleChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  handleSubmit = async e => {\n    e.preventDefault();\n    const { firstname, lastname, email, imageUrl, gpa, campusId } = this.state;\n    const payload = {\n      id:       this.props.match.params.id,\n      firstname,\n      lastname,\n      email,\n      imageUrl: imageUrl.trim() || '/student.png',\n      gpa:       parseFloat(gpa) || 0,\n      campusId:  campusId || null\n    };\n    try {\n      await this.props.editStudent(payload.id, payload);\n      this.setState({ redirect: true });\n    } catch (err) {\n      console.error('Error updating student:', err);\n    }\n  }\n\n  render() {\n    if (this.state.redirect) {\n      return <Redirect to={`/student/${this.props.match.params.id}`} />;\n    }\n    return (\n      <div>\n        <Header />\n        <EditStudentView\n          {...this.state}\n          campuses={this.props.campuses}\n          handleChange={this.handleChange}\n          handleSubmit={this.handleSubmit}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapState = state => ({\n  campuses: state.allCampuses\n});\n\nconst mapDispatch = dispatch => ({\n  fetchAllCampuses: () => dispatch(fetchAllCampusesThunk()),\n  fetchStudent: id => dispatch(fetchStudentThunk(id)),\n  editStudent: (id, student) => dispatch(editStudentThunk(id, student))\n});\n\nexport default connect(mapState, mapDispatch)(EditStudentContainer);\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}