{"ast":null,"code":"var _jsxFileName = \"/Users/ivysun/Library/Mobile Documents/com~apple~CloudDocs/Hunter/Spring 2025/CS 39548 Practical Web Development /Projects/final-project-client/src/components/containers/NewCampusContainer.js\";\n/*==================================================\nNewStudentContainer.js\n\nThe Container component is responsible for stateful logic and data fetching, and\npasses data (if any) as props to the corresponding View component.\nIf needed, it also defines the component's \"connect\" function.\n================================================== */\nimport Header from './Header';\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport NewCampusView from '../views/NewCampusView';\nimport { addCampusThunk } from '../../store/thunks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass NewCampusContainer extends Component {\n  // Initialize state\n  constructor(props) {\n    super(props);\n    // Capture input data when it is entered\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n    // Take action after user clicks the submit button\n    this.handleSubmit = async event => {\n      event.preventDefault(); // Prevent browser reload/refresh after submit.\n\n      const defaultImageUrl = \"https://s29068.pcdn.co/wp-content/uploads/campus-shot-768x432.jpg.optimal.jpg\";\n      let campus = {\n        name: this.state.name,\n        address: this.state.address,\n        description: this.state.description,\n        imageUrl: this.state.imageUrl || defaultImageUrl\n      };\n\n      // Add new campus in back-end database\n      let newCampus = await this.props.addCampus(campus);\n\n      // Update state and trigger redirect to show the new campus\n      this.setState({\n        name: \"\",\n        address: \"\",\n        description: \"\",\n        imageUrl: \"\",\n        redirect: true,\n        redirectId: newCampus.id\n      });\n    };\n    this.state = {\n      name: \"\",\n      address: \"\",\n      description: \"\",\n      imageUrl: \"\",\n      redirect: false,\n      redirectId: null\n    };\n  }\n  // Unmount when the component is being removed from the DOM:\n  componentWillUnmount() {\n    this.setState({\n      redirect: false,\n      redirectId: null\n    });\n  }\n\n  // Render new campus input form\n  render() {\n    // Redirect to new campus page after submit\n    if (this.state.redirect) {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: `/campus/${this.state.redirectId}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 16\n      }, this);\n    }\n\n    // Display the input form via the corresponding View component\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(NewCampusView, {\n        handleChange: this.handleChange,\n        handleSubmit: this.handleSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this);\n  }\n}\n\n// Map dispatch to props\nconst mapDispatch = dispatch => {\n  return {\n    addCampus: campus => dispatch(addCampusThunk(campus))\n  };\n};\n\n// Export store-connected container\nexport default connect(null, mapDispatch)(NewCampusContainer);","map":{"version":3,"names":["Header","Component","connect","Redirect","NewCampusView","addCampusThunk","jsxDEV","_jsxDEV","NewCampusContainer","constructor","props","handleChange","event","setState","target","name","value","handleSubmit","preventDefault","defaultImageUrl","campus","state","address","description","imageUrl","newCampus","addCampus","redirect","redirectId","id","componentWillUnmount","render","to","fileName","_jsxFileName","lineNumber","columnNumber","children","mapDispatch","dispatch"],"sources":["/Users/ivysun/Library/Mobile Documents/com~apple~CloudDocs/Hunter/Spring 2025/CS 39548 Practical Web Development /Projects/final-project-client/src/components/containers/NewCampusContainer.js"],"sourcesContent":["/*==================================================\nNewStudentContainer.js\n\nThe Container component is responsible for stateful logic and data fetching, and\npasses data (if any) as props to the corresponding View component.\nIf needed, it also defines the component's \"connect\" function.\n================================================== */\nimport Header from './Header';\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\n\nimport NewCampusView from '../views/NewCampusView';\nimport { addCampusThunk } from '../../store/thunks';\n\nclass NewCampusContainer extends Component {\n    // Initialize state\n    constructor(props) {\n      super(props);\n      this.state = {\n        name: \"\",\n        address: \"\",\n        description: \"\",\n        imageUrl: \"\",\n        redirect: false,\n        redirectId: null,\n      };\n    }\n  \n    // Capture input data when it is entered\n    handleChange = (event) => {\n      this.setState({\n        [event.target.name]: event.target.value,\n      });\n    };\n  \n    // Take action after user clicks the submit button\n    handleSubmit = async (event) => {\n      event.preventDefault();  // Prevent browser reload/refresh after submit.\n  \n      const defaultImageUrl = \"https://s29068.pcdn.co/wp-content/uploads/campus-shot-768x432.jpg.optimal.jpg\";\n\n      let campus = {\n        name: this.state.name,\n        address: this.state.address,\n        description: this.state.description,\n        imageUrl: this.state.imageUrl || defaultImageUrl,\n      };\n  \n      // Add new campus in back-end database\n      let newCampus = await this.props.addCampus(campus);\n  \n      // Update state and trigger redirect to show the new campus\n      this.setState({\n        name: \"\",\n        address: \"\",\n        description: \"\",\n        imageUrl: \"\",\n        redirect: true,\n        redirectId: newCampus.id,\n      });\n    };\n  \n    // Unmount when the component is being removed from the DOM:\n    componentWillUnmount() {\n      this.setState({ redirect: false, redirectId: null });\n    }\n  \n    // Render new campus input form\n    render() {\n      // Redirect to new campus page after submit\n      if (this.state.redirect) {\n        return <Redirect to={`/campus/${this.state.redirectId}`} />;\n      }\n  \n      // Display the input form via the corresponding View component\n      return (\n        <div>\n          <Header />\n          <NewCampusView \n            handleChange={this.handleChange} \n            handleSubmit={this.handleSubmit} \n          />\n        </div>\n      );\n    }\n  }\n  \n  // Map dispatch to props\n  const mapDispatch = (dispatch) => {\n    return {\n      addCampus: (campus) => dispatch(addCampusThunk(campus)),\n    };\n  };\n  \n  // Export store-connected container\nexport default connect(null, mapDispatch)(NewCampusContainer);\n\n\n\n "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}